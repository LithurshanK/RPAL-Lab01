let rec range B = 
	B eq 1 or B eq 0 -> 0 
	| B eq 2 -> 1 
	| range (B-1) + range (B-2) 

in 
let rec fib A B M = 
    range (M+1) le B -> 
        range (M+1) ge A -> 
        (fib A B (M+1) aug range (M+1)) 
        | fib A B (M+1)
        | nil 
        
in 
let Reverse T =
        let rec fun T R N =
        N eq 0  -> R | fun T (R aug (T N)) (N-1)
        in
        fun T nil (Order T)

in 
let fib A B = Reverse(fib A B 0)
in
Print(fib 0 100 )
